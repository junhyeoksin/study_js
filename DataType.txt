원시 타입과 객체타입으로 구분

--원시타입 : 변경불가능한 값
  원시 값을 변수에 할당하면 변수(확보된 메모리 공간)에는 실제 값이 저장.

--객체(참조)타입의 값: 변경가능한 값
  객체를 변수에 할당하면 변수(할당된 메모리 공간)에는 참조값이 저장.
 
 
-원시값-
원시타입의 값, 즉 원시 값은 변경불가능한 값이다. 한번 생성된 원시 값은 읽기 전용값으로서 변경할 수 없다.

-변수- 
하나의 값을 저장하기 위해 확보한 메모리 공간자체 또는 그 메모리 공간을 식별하기 위해 붙은 이름,
언제든지 재할당을 통해 변수 값ㅇ르 변경(교체)할 수 있다.

* 변수는 값이 전달되는 것이 아니라 메모리 주소가 전달된다. 변수와 같은 식별자는 값이 아니라 메모리 주소를 기억하고 있기 때문이다. 



문자열과 불변성

원시값을 저장하려면 먼저 확보해야하는 메모리 공간의 크기를 결정해야한다.
원시 타입별로 메모리 공간의 크기가 미리 정해져 있다. 브라우저 제조사의 구현에 따라 원시 타입의 크기는 다를 수 있다. 
문자열은 0개 이상의 문자로 이뤄진 집합을 말하며, 1개의 문자는 2바이트 메모리 공간에 저장된다.  따라서 문자열은 몇개의 문자로 이뤄졌느냐에 따라 필요한 메모리 공간 크기가 결정된다. 

자바스크립트는 원시타입인 문자열 타입을 제공한다. 문자열은 원시타입이며, 변경불가능하다. 즉 생성된 이후에 변경할 수 없음을 의미한다. 

* 문자열은 유사배열 객체이면서 이터러블 이므로 배열과 유사하게 각 문자에 접근할 수 있다.

 

값에 의한 전달

score 변수와 copy 변수의 값 80은 다른 메모리 공간에 저장된 별개의 값이다.
따라서 score 변수의 값을 변경해도 copy 변수의 값에는 영향을 받지 않는다.


-객체- 

객체(참조) 타입의 값, 즉 객체는 변경 가능한 값이다. 
객체는 프로퍼티의 개수가 정해져있지 않으며 동적으로 추가되고 삭제 할 수 있다. 또한 프로퍼티 값에 제약이 없다. 
객체는 원시값과 같이 확보해야 할 메모리 공간의 크기를 사전에 정해 둘 수 없다. 

* 원시 값과 다르게 여러개의 식별자가 하나의 객체를 공유할 수 있다.


* 자바, C++ 같은 클래스 기반 객체지향 프로그래밍 언어는 사전에 정의된 클래스를 기반으로 객체를 생성한다. 즉 객체생성하기 전에 이미 프로퍼티와 메서드가 정해져 있다.
* 자바스크립트는 클래스 없이 객체 생성을 하며 생성된  이후에도 동적으로 프로퍼티와 메서드를 추가할 수 있다. 
= 자바스크립트가 편리하지만 성능면에서는 클래스 기반 객체 지향프로그래밍언어의 객체보다 프로퍼티 접근 비용이 더 많이 드는 비효율적인 방식이다. 


얕은 복사  :    한단계까지만 복사, 객체를 할당한 변수를 다른 변수에 할당하는 것                
깊은 복사 : 겍체에 중첩되어 있는 객체까지 모두 복사, 원시 값을 할당한 변수를 다른 변수에 할당하는 것

값에 의한 전달과 참조에 의한 전달은 식별자가 기억하는 메모리 공간에 저장되어 있는 값을 복사해서 전달하는 면에서 동일하다. 

다만 식별자가 기억하는 메모리 공간, 즉 변수에 저장되어 있는 값이 원시 값이냐 참조 값이냐의 차이만 있을 뿐이다. 

자바스크립트에는 참조에 의한 전달은 존재하지 않고 값에 의한 전달만이 존재한다고 말할 수 있다. 

 