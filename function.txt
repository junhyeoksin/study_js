
- 함수 표현식 

객체 : 일급객체 - 함수를 값처럼 자유롭게 사용
함수 리터럴로 생성한 함수 객체를 변수에 할당할 수 있다.

함수 리터럴의 함수이름은 생략할 수 있다. = 익명함수
함수 선언문 =  "표현식이 아닌 문"
함수 표현식 = "표현식인 문"

자바스크립트 엔진은 함수 선언문의 함수 이름으로 식별자를 암묵적 생성하고 생성된 함수 객체를 할당하므로
함수 표현식과 유사하게 동작하는 것처럼 보이지만 실제로 동일하지 않는다.


- 함수 생성시점과 함수 호이스팅 

함수 호이스팅 : 함수 선언문이 코드의 선두로 끌어 올려진 것처럼 동작하는 자바스크립트의 고유 특징
함수 선언문으로 정의한 함수는 함수선언문 이전에 호출 가능
함수 표현식으로 정의한 함수는 삼수표현식 이전에 호출 불가능
* 함수 선언문으로 정의한 함수와 함수 표현식으로 정의한 함수의 생성 시점이 다르기 때문이다.


- 화살표 함수 - 생성자로 사용 x , 기존함수와 this 바인딩 방식이 다름, 프로퍼티가 없음, arguments 객체 생성 x



- 인수확인
자바스크립트의 경우 함수를 정의할ㅇ 떄 적절한 인수가 전달되었는지 확인할 필요가 있다. 

자바스크립트 함수는 매개변수와 인수의 개수가 일치하는지 확인하지 않는다. 
자바스크립트는 동적 타입 언어다. 따라서 자바스크립트 함수는 매개변수의 타입을 사전에 지정할 수 없다. 

- 매개변수의 최대 개수 
최대 개수에 명시적으로 제한하고 있지 않다. 매개변수는 순서에 의미가 있다. 많아지면 함수를 호출할 떄 전달해야 할 인수의 순서를 고려해야한다. 
함수의 사용법을 이해하기 어렵게 만들고 실수를 발생시킬 가능성을 높인다. 또한 매개변수의 개수나 순서가 변경되면 함수의 호출 방법도 바뀌므로 함수를 사용하는 코드 전체가 
영향을 받ㄴ든다. 즉 유지 보수성이 나빠진다. 

함수의 매개변수는 코드를 이해하는데 방해되는 요소이므로 이상적인 매개변수 개수는 0개 이며 적을수록 좋다. 매개변수의 개수가 많다는 것은 함수가 여러가지 일을 한다는
증거이므로 바람직하지 않다. 

* 이상적인 함수는 한가지 일만 해야하며 가급적 작게 만들어야 한다. 

- 재귀 함수 
함수가 자기 자신을 호출하는 것을 재귀호출이라고 한다. 재귀함수는 자기 자신을 호출하는 행위, 즉 재귀 호출을 수행하는 함수를 말한다. 

-중첩 함수
함수 내부에 정의된 함수를 중첩함수 또는 내부 함수라 한다. 그리고 중첩 함수를 포함하는 함수는 외부 함수라 부른다.
중첩함수는 외부 함수 내부에서만 호출할 수 있다.  

-고차 함수 
콜백함수 : 함수의 매개변수를 통해 다른 함수의 내부로 전달되는 함수 
   콜백함수는 고차함수에 의해 호출되며 이때 고차함수는 필요에 따라 콜백함수에 인수를 전달할 수 있다.
고차함수 : 매개 변수를 통해 함수의 외부에서 콜백 함수를 전달받은 함수
    매개변수를 통해 전달받은 콜백 함수의 호출 시점을 결정해서 호출한다.

